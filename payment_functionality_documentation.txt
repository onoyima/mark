NYSC PROJECT - PAYMENT FUNCTIONALITY DOCUMENTATION
==================================================

This document provides a comprehensive list of all files, pages, and lines associated with payment functionality in both the frontend and backend of the NYSC project.

=== FRONTEND PAYMENT FILES ===

1. NAVIGATION & SIDEBAR COMPONENTS
   - front/components/Sidebar.tsx
     * Lines 45-47: Student payment navigation link
     * Lines 48-50: Payment history navigation link
     * Lines 78-80: Admin payments navigation link
   
   - front/components/AdminSidebar.tsx
     * Lines 52-54: "Payment Management" navigation link for admin

2. DASHBOARD COMPONENTS
   - front/components/DashboardCards.tsx
     * Lines 15-20: Payment success rate calculation
     * Lines 25-30: Total revenue display
     * Lines 35-40: Pending payments display
   
   - front/components/LimitedDashboardCards.tsx
     * Lines 12-18: Payment overview for limited access users
     * Lines 20-25: Payment status display
   
   - front/components/DashboardStats.tsx
     * Lines 8-12: Completed payments statistics
     * Lines 14-18: Pending payments statistics
     * Lines 20-24: Total revenue statistics
     * Lines 26-30: Payment success rate statistics
   
   - front/components/AnalyticsCharts.tsx
     * Lines 10-15: Payment analytics charts setup
     * Lines 20-25: Total revenue chart
     * Lines 30-35: Average payment amount chart
     * Lines 40-45: Payment success rate chart
     * Lines 50-55: Monthly payment trends chart

3. QUICK ACTIONS & ACTIVITY COMPONENTS
   - front/components/QuickActions.tsx
     * Lines 18-22: "Payment Overview" quick action card for admin dashboard
   
   - front/components/RecentActivity.tsx
     * Lines 25-30: Payment-related activity filters
     * Lines 35-40: Payment activity display logic

4. STUDENT PAGES
   - front/app/student/page.tsx
     * Lines 45-50: Payment amount display
     * Lines 52-57: Late fee display
     * Lines 60-65: Total payment calculation
     * Lines 70-75: Payment status display
     * Lines 80-85: "Make Payment" link
   
   - front/app/student/confirm/page.tsx
     * Lines 120-125: Payment proceeding logic after data confirmation
     * Lines 130-135: Dynamic payment amount calculation
     * Lines 140-145: Temporary form data storage for payment
   
   - front/app/student/payment-history/page.tsx
     * Lines 15-20: Payment history fetching
     * Lines 25-30: Payment records display
     * Lines 35-40: Receipt viewing functionality
     * Lines 45-50: Payment history table rendering
   
   - front/app/student/payment/page.tsx
     * Lines 20-25: Payment initiation handling
     * Lines 30-35: Payment verification logic
     * Lines 40-45: Payment status display
     * Lines 50-55: Payment details rendering
     * Lines 60-65: Paystack redirection logic
   
   - front/app/student/updated-info/page.tsx
     * Lines 85-90: Student payment status display
     * Lines 95-100: Payment history link
     * Lines 105-110: Complete payment link

5. ADMIN PAGES
   - front/app/admin/page.tsx
     * Lines 30-35: Admin dashboard payment overview
   
   - front/app/admin/payments/page.tsx
     * Lines 15-20: Payment records listing
     * Lines 25-30: Payment permissions check (canViewPayments)
   
   - front/app/admin/payments/[id]/page.tsx
     * Lines 20-25: Payment details fetching
     * Lines 30-35: Process refund functionality
     * Lines 40-45: Retry payment functionality
     * Lines 50-55: Navigation to payment records
     * Lines 60-65: Navigation to student profiles
   
   - front/app/admin/students/page.tsx
     * Lines 75-80: Student payment status display
     * Lines 85-90: Payment amount display
     * Lines 95-100: Payment date display
     * Lines 105-110: Payment status filtering
   
   - front/app/admin/settings/page.tsx
     * Lines 40-45: Payment amount configuration
     * Lines 50-55: Payment deadline configuration
     * Lines 60-65: Late payment fee configuration

6. SERVICES & HOOKS
   - front/services/admin.service.ts
     * Lines 45-50: getPayments method
     * Lines 55-60: getPaymentDetails method
     * Lines 65-70: processRefund method
     * Lines 75-80: retryPayment method
   
   - front/services/student.service.ts
     * Lines 85-90: initiatePayment method
     * Lines 95-100: verifyPayment method
     * Lines 105-110: getPaymentHistory method
     * Lines 115-120: getPaymentReceipt method
     * Lines 125-130: getSystemStatus method (payment-related)
   
   - front/services/payment.service.ts
     * Lines 10-15: Payment initialization service
     * Lines 20-25: Payment verification service
   
   - front/services/admin-settings.service.ts
     * Lines 30-35: Payment amount settings handling
     * Lines 40-45: Payment deadline settings handling
     * Lines 50-55: Late payment fee settings handling
   
   - front/hooks/usePaystack.ts
     * Lines 10-15: Paystack payment initialization hook
     * Lines 20-25: Payment configuration setup
     * Lines 30-35: Payment callback handling

7. TYPES & INTERFACES
   - front/types/student.types.ts
     * Lines 25-30: PaymentData interface definition
     * Lines 35-40: PaymentVerificationResponse interface definition
   
   - front/types/admin.types.ts
     * Lines 40-45: AdminDashboardStats interface (payment fields)
     * Lines 50-55: PaymentAnalytics interface definition
     * Lines 60-65: PaymentRecord interface definition
     * Lines 70-75: NyscPaymentDetails interface definition
   
   - front/types/auth.types.ts
     * Lines 30-35: Payment-related fields in user authentication types

8. UTILITY COMPONENTS
   - front/components/CountdownTimer.tsx
     * Lines 20-25: Payment deadline information display
   
   - front/components/DeadlineModal.tsx
     * Lines 15-20: Payment context in registration deadline
   
   - front/components/AdminNavbar.tsx
     * Lines 40-45: "Payment verification needed" notification
   
   - front/components/PaymentHistory.tsx
     * Lines 10-15: Payment history component setup
     * Lines 20-25: Payment summary display
     * Lines 30-35: Detailed payment history rendering

9. PERMISSIONS & ROLES
   - front/utils/rolePermissions.ts
     * Lines 25-30: canViewPayments permission definition
     * Lines 35-40: canEditPayments permission definition

10. EXPORT FUNCTIONALITY
    - front/app/admin/exports/page.txt
      * Line 15: paymentStatus field in admin exports

=== BACKEND PAYMENT FILES ===

1. CONTROLLERS
   - app/Http/Controllers/NyscAdminController.php
     * Lines 150-155: Payment analytics (total revenue)
     * Lines 160-165: Payment analytics (average amount)
     * Lines 170-175: Payment analytics (monthly trends)
     * Lines 200-205: Payment records retrieval
     * Lines 250-255: Payment settings management (amount)
     * Lines 260-265: Payment settings management (late fee)
     * Lines 270-275: Payment settings management (deadline)
     * Lines 300-305: Payment data export functionality
     * Lines 350-355: Payment viewing permissions
     * Lines 360-365: Payment editing permissions
   
   - app/Http/Controllers/NyscPaymentController.php
     * Lines 20-25: Payment initiation handling
     * Lines 30-35: Payment amount calculation based on deadlines
     * Lines 40-45: NyscPayment record creation
     * Lines 50-55: Payment verification with Paystack
     * Lines 60-65: Payment receipt generation
   
   - app/Http/Controllers/NyscStudentController.php
     * Lines 180-185: Latest successful payment retrieval
     * Lines 190-195: Payment status checking
     * Lines 200-205: Payment processing (processPayment method)
     * Lines 210-215: NyscPayment record creation
     * Lines 220-225: Student details submission after payment
     * Lines 280-285: Payment history fetching
     * Lines 290-295: Payment info in student profile

2. MODELS
   - app/Models/NyscPayment.php
     * Lines 10-15: NyscPayment model definition
     * Lines 20-25: Table name (nysc_payments)
     * Lines 30-35: Fillable fields (payment_reference, amount, status, etc.)
     * Lines 40-45: Relationship to Student model
     * Lines 50-55: Relationship to StudentNysc model
     * Lines 60-65: Successful payments scope
     * Lines 70-75: Pending payments scope
     * Lines 80-85: Failed payments scope

3. CONSOLE COMMANDS
   - app/Console/Commands/TestNyscPaymentFlow.php
     * Lines 15-20: NYSC payment flow testing command
     * Lines 25-30: NyscPayment record creation for testing
     * Lines 35-40: Payment verification simulation
     * Lines 45-50: Successful payment simulation
     * Lines 55-60: Already processed payment simulation
     * Lines 65-70: Test data cleanup
   
   - app/Console/Commands/RecoverNyscPayments.php
     * Lines 15-20: Orphaned payment recovery command
     * Lines 25-30: Successful payment identification
     * Lines 35-40: StudentNysc record reconstruction
     * Lines 45-50: Payment record updates

4. EXPORTS
   - app/Exports/StudentNyscExport.php
     * Lines 25-30: Payment status export
     * Lines 35-40: Payment amount export
     * Lines 45-50: Payment date export

5. DATABASE MIGRATIONS
   - database/migrations/2025_01_16_000000_create_nysc_payments_table.php
     * Lines 14-20: nysc_payments table creation
     * Lines 18: payment_reference field (unique)
     * Lines 20: payment_method field (enum)
     * Lines 21: payment_data field (JSON)
     * Lines 22: payment_date field (timestamp)
     * Lines 29: payment_reference index
   
   - database/migrations/2024_08_01_000003_create_nysc_payments_table.php
     * Lines 11-17: Alternative nysc_payments table creation
     * Lines 17: payment_reference field (unique)
     * Lines 19: payment_method field (enum)
     * Lines 20: payment_data field (JSON)
     * Lines 21: payment_date field (timestamp)
     * Lines 28: payment_reference index
   
   - database/migrations/2025_01_25_000002_add_session_id_to_nysc_payments_table.php
     * Lines 14: nysc_payments table modification
     * Lines 18: student_nysc_id nullable comment (set after successful payment)
     * Lines 31: nysc_payments table rollback
   
   - database/migrations/2025_08_25_205558_add_student_id_to_nysc_payments_table.php
     * Lines 14: nysc_payments table modification
     * Lines 25: nysc_payments table rollback
   
   - database/migrations/2025_01_16_000001_update_student_nysc_table_structure.php
     * Lines 15-19: Payment-related fields removal (moved to nysc_payments)
     * Lines 17: payment_amount field removal
     * Lines 18: payment_reference field removal
     * Lines 19: payment_date field removal
     * Lines 70-73: Payment fields addition (rollback)
     * Lines 71: payment_amount field addition
     * Lines 72: payment_reference field addition
     * Lines 73: payment_date field addition
   
   - database/migrations/2025_01_30_000001_create_admin_settings_table.php
     * Lines 20: category field (includes 'payment')
     * Lines 31-35: payment_amount setting definition
     * Lines 41-45: payment_deadline setting definition
     * Lines 81-85: late_payment_fee setting definition
   
   - database/migrations/2025_01_25_000001_create_nysc_temp_submissions_table.php
     * Lines 17: session_id field comment (to link with payment session)

6. ROUTES
   - routes/nysc.php
     * Payment-related routes:
       - initiatePayment
       - verifyPayment
       - getPaymentHistory
       - getPaymentReceipt
       - processRefund
       - retryPayment

=== PAYMENT FLOW SUMMARY ===

1. STUDENT PAYMENT FLOW:
   - Student views payment amount on dashboard (student/page.tsx)
   - Student confirms data and proceeds to payment (student/confirm/page.tsx)
   - Payment is initiated through Paystack (student/payment/page.tsx, usePaystack.ts)
   - Payment verification occurs (payment.service.ts, NyscPaymentController.php)
   - Payment history is accessible (student/payment-history/page.tsx)

2. ADMIN PAYMENT MANAGEMENT:
   - Admin views payment analytics (admin/page.tsx, DashboardCards.tsx)
   - Admin manages payment settings (admin/settings/page.tsx)
   - Admin views all payments (admin/payments/page.tsx)
   - Admin can process refunds and retry payments (admin/payments/[id]/page.tsx)
   - Admin exports payment data (exports/page.txt, StudentNyscExport.php)

3. BACKEND PAYMENT PROCESSING:
   - Payment initiation (NyscPaymentController.php)
   - Payment verification with Paystack (NyscPaymentController.php)
   - Payment record management (NyscPayment.php model)
   - Payment analytics and reporting (NyscAdminController.php)
   - Payment recovery and testing (Console Commands)

=== DATABASE STRUCTURE ===

1. MAIN PAYMENT TABLE: nysc_payments
   - Fields: id, student_id, student_nysc_id, payment_reference, amount, status, payment_method, payment_data, payment_date, session_id
   - Relationships: belongs to Student and StudentNysc models
   - Scopes: successful, pending, failed payments

2. ADMIN SETTINGS TABLE: admin_settings
   - Payment-related settings: payment_amount, payment_deadline, late_payment_fee
   - Category: 'payment' for payment-related configurations

3. TEMPORARY SUBMISSIONS: nysc_temp_submissions
   - session_id field links with payment sessions

This documentation covers all identified payment-related functionality across the entire NYSC project, including frontend components, backend controllers, models, database migrations, and the complete payment flow from initiation to completion.